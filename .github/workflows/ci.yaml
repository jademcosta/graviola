name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches:
    - main

permissions:
  contents: read  # to fetch code (actions/checkout)

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        cache: true
    - name: Test
      run: make test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        cache: true
    - name: Lint
      run: make lint

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        cache: true
    - name: Start Prometheus 1
      run: |
        docker run -d -v ./test/e2e/prometheus/prom1/conf:/etc/prometheus -p 9091:9090 prom/prometheus:latest \
        --config.file="/etc/prometheus/conf.yml" --web.enable-remote-write-receiver --log.level=debug
    - name: Start Prometheus 2
      run: |
        docker run -d -v ./test/e2e/prometheus/prom2/conf:/etc/prometheus -p 9092:9090 prom/prometheus:latest \
        --config.file="/etc/prometheus/conf.yml" --web.enable-remote-write-receiver --log.level=debug
    - name: Wait Prometheis boot
      run: sleep 2
    - name: Run tests
      run: make ci-test-e2e

  config-example-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        cache: true
    - name: Start Graviola with config example
      run: |
        go build -o graviola ./cmd/main.go
        chmod +x graviola
        ./graviola --config ./config_example.yml &
        sleep 5
    - name: Make sure Graviola is working
      run: |
        curl http://localhost:8091/metrics --fail
